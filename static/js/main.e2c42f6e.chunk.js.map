{"version":3,"sources":["components/StatesForm.js","App.js","reportWebVitals.js","index.js"],"names":["StatesForm","props","useState","cityData","setCityData","className","onChange","event","target","value","length","_id","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","getAllCities","stateNames","map","state","name","cities","city","App","setStateNames","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNA2CeA,EAzCI,SAACC,GAChB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBA,OACI,sBAAKC,UAAU,iBAAf,UACI,kDACA,gCACI,4CACA,yBAAQC,SAXI,SAACC,GACa,IAA9BA,EAAMC,OAAOC,MAAMC,QAbN,SAACC,GAClB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAEN,SAE3BO,MAAM,iDAAkDN,GACnDO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFlB,EAAYkB,MAOpBC,CAAahB,EAAMC,OAAOC,QAOlB,UACI,2BACCR,EAAMuB,WAAWC,KAAI,SAAAC,GAAK,OAAI,wBAAwBjB,MAAOiB,EAAMf,IAArC,SAA2Ce,EAAMC,MAApCD,EAAMf,cAG1D,gCACI,2CACA,mCACI,2BACqB,IAApBR,EAASO,OAAe,6BAAQP,EAAS,GAAGyB,OAAOH,KAAI,SAAAI,GAAI,OAAI,wBAAuBpB,MAAOoB,EAAKlB,IAAnC,SAAyCkB,EAAKF,MAAjCE,EAAKlB,kBCpBvFmB,EAdH,WACV,MAAoC5B,mBAAS,IAA7C,mBAAOsB,EAAP,KAAmBO,EAAnB,KAMA,OALEC,qBAAU,WACNd,MAAM,sDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIS,EAAcT,QACjC,IAEH,8BACE,cAAC,EAAD,CAAYE,WAAYA,OCCfS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e2c42f6e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./StatesForm.scss\";\r\nconst StatesForm = (props) => {\r\n    const [cityData, setCityData] = useState(\"\");\r\n    const getAllCities = (_id) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ _id })\r\n        };\r\n        fetch('https://indian-state-api.herokuapp.com/getCity', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCityData(data);\r\n            });\r\n    }\r\n    const onChangeHandler = (event) => {\r\n        if (event.target.value.length === 0) {\r\n            return;\r\n        }\r\n        getAllCities(event.target.value);\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n            <h1>Indian State API</h1>\r\n            <div>\r\n                <label>State: </label>\r\n                <select onChange={onChangeHandler}>\r\n                    <option></option>\r\n                    {props.stateNames.map(state => <option key={state._id} value={state._id}>{state.name}</option>)}\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <label>City: </label>\r\n                <select>\r\n                    <option></option>\r\n                    {cityData.length === 0 ? <></> : cityData[0].cities.map(city => <option key={city._id} value={city._id}>{city.name}</option>)}\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default StatesForm","import StatesForm from \"./components/StatesForm\";\nimport React,{useState,useEffect} from \"react\";\nconst App = () => {\n  const [stateNames, setStateNames] = useState([])\n    useEffect(() => {\n        fetch('https://indian-state-api.herokuapp.com/getAllState')\n            .then(response => response.json())\n            .then(data => setStateNames(data));\n    }, [])\n  return (\n    <div >\n      <StatesForm stateNames={stateNames}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}